name: "Tests"

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main

jobs:
  build: # make sure build/ci work properly and there is no faked build ncc built scripts
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6
      - run: npm ci
      - run: npm run audit
      - run: npm run build
      - run: git status --porcelain
      - run: git diff
      - run: git diff --exit-code

  test:
    runs-on: ubuntu-latest
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000
    steps:
      - uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6
      - name: Build images
        run: |
          for distro in alpine centos debian; do
            docker build -t localhost:5000/match-coverage/$distro ./tests/fixtures/image-$distro-match-coverage
            docker push localhost:5000/match-coverage/$distro:latest
          done
      - name: Inspect
        run: |
          docker images -a
          for distro in alpine centos debian; do
            docker buildx imagetools inspect localhost:5000/match-coverage/$distro:latest
          done
      - run: npm ci
      - run: npm run audit
      - run: npm test

  test-download-action:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6
        with:
          path: ./

      - name: Download Grype v0.54.0
        uses: ./download-grype # anchore/scan-action/download-grype
        with:
          grype-version: v0.54.0

      - name: Check Grype version before scan-action
        run: grype version | egrep "^Version:.*0.54.0$"

      - name: Scan test image
        uses: ./
        with:
          image: alpine:latest
          grype-version: v0.54.0 # set the same version to test that current Grype binary wasn't overwritten by the latest version
          fail-build: false # to prevent fail due to vuln:s on test image

      - name: Check Grype version after scan-action
        run: grype version | egrep "^Version:.*0.54.0$"

  test-image-input:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6
      - uses: ./
        id: scan
        with:
          image: alpine:latest
          fail-build: false

      - name: Validate file exists
        run: ls '${{ steps.scan.outputs.sarif }}'

  test-directory-input:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6
      - uses: ./
        id: scan
        with:
          path: tests/fixtures/npm-project
          fail-build: false

      - name: Validate file exists
        run: ls '${{ steps.scan.outputs.sarif }}'

  test-sbom-input:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6
      - uses: ./
        id: scan
        with:
          sbom: tests/fixtures/test_sbom.spdx.json
          fail-build: false

      - name: Validate file exists
        run: ls '${{ steps.scan.outputs.sarif }}'

  test-table-output:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6
      - uses: ./
        id: scan
        with:
          output-format: table
          image: alpine:latest
          fail-build: false

  test-windows-image:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6
      - uses: ./
        id: scan
        with:
          image: alpine:latest
          fail-build: false

      - name: Validate file exists
        run: ls '${{ steps.scan.outputs.sarif }}'

  test-windows-path:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6
      - uses: ./
        id: scan
        with:
          path: tests/fixtures/npm-project
          fail-build: false

      - name: Validate file exists
        run: ls '${{ steps.scan.outputs.sarif }}'

  test-windows-json:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6
      - uses: ./
        id: scan
        with:
          output-format: json
          path: tests/fixtures/npm-project
          fail-build: false

      - name: Validate file exists
        run: ls '${{ steps.scan.outputs.json }}'

  test-sarif-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6
      - uses: ./
        id: scan
        with:
          image: debian:8
          fail-build: false

      - name: Validate file exists
        run: ls '${{ steps.scan.outputs.sarif }}'

  test-sarif-directory:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6
      - uses: ./
        id: scan
        with:
          path: tests/fixtures/npm-project
          fail-build: false

      - name: Validate file exists
        run: ls '${{ steps.scan.outputs.sarif }}'

  test-json-directory:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6
      - uses: ./
        id: scan
        with:
          output-format: json
          path: tests/fixtures/npm-project
          fail-build: false

      - name: Validate file exists
        run: ls '${{ steps.scan.outputs.json }}'
